---
title: "COVID-19: MUNICIPIOS DE SONORA"
output: 
  flexdashboard::flex_dashboard:
    navbar:
      - { title: "LUIS ARMANDO MORENO", href: "http://www.luisarmandomoreno.com/", align: right }
    theme: flatly
    orientation: columns
---
<style>                     
.navbar {
  background-color:#58BCBC;
  border-color:black;
  hover-color:black;
}
navbar-inverse .navbar-nav > li > a:hover,
.navbar-inverse .navbar-nav > li > a:focus {
  color: black;
  background-color: white;
}
.navbar-inverse .navbar-nav > .active > a,
.navbar-inverse .navbar-nav > .active > a:hover,
.navbar-inverse .navbar-nav > .active > a:focus {
  color: black;
  background-color: white;
}
.navbar-inverse .navbar-toggle:hover,
.navbar-inverse .navbar-toggle:focus {
  background-color: black;
}
.navbar-inverse .navbar-collapse,
.navbar-inverse .navbar-form {
  border-color: black;
{
.navbar-brand {
font-family: Lato Black
}
</style>  
```{r setup, include=FALSE}
library(flexdashboard)
library(tidyverse)
library(extrafont)
library(scales)
library(plotly)
library(htmlwidgets)
library(showtext)
library(tint)
library(rgdal)
library(rgeos)
library(ggiraph)
library(miniUI)
library(units)
library(reactable)
library(zoo)
library(lubridate)
library(treemapify)
library(wesanderson)
library(ggsci)
```

```{r, include=FALSE}
Sonora.DF <- read_csv("ST_SonoraInformesCOVID.csv", 
    col_types = cols(Fecha = col_date(format = "%d/%m/%Y")))
Sonora.DF.hoy <- filter(Sonora.DF, Fecha == Sys.Date())
Sonora.DF.hoy <- select(Sonora.DF.hoy, Hospitalizados, Ambulatorios.Activos, Decesos, Recuperados)
Sonora.DF.hoy <- rename(Sonora.DF.hoy, "Ambulatorios activos"= Ambulatorios.Activos)
Sonora.DF.hoy <- gather(Sonora.DF.hoy, key= Estatus, value= Casos.confirmados) 
```

```{r}

Sonora.DF.hoy$label <- c(paste0(Sonora.DF.hoy$Estatus, "\n ",  Sonora.DF.hoy$Casos.confirmados, "\n ", (round((Sonora.DF.hoy$Casos.confirmados/(sum(Sonora.DF.hoy$Casos.confirmados))*100), digits = 1)),"%"))
ggplot(Sonora.DF.hoy, aes(area = Casos.confirmados, fill= Estatus, label= Sonora.DF.hoy$label)) + geom_treemap(color = "white", size=5) +
   scale_fill_manual(values= c("#9BD7D7", "#D175A3", "#FAC090", "#95B3D7")) +
geom_treemap_text(family = "Lato", colour = "white", place = "topleft",
                    grow = FALSE) +
   theme_void() +
   theme(plot.title = (element_text(family = "Lato Black", size = 15, color = "#01A2AC")), rect = element_rect(fill = "transparent"),
    legend.position = "none",
     plot.background = element_rect(fill = "transparent", color = NA),
    legend.key.height = unit (2, "cm"), axis.text = element_blank(),
    legend.text = element_text(family = "Lato Light", size = 6, color = "black"),
    legend.title = element_blank(),
    plot.caption = element_text(family = "Lato Light", size = 8, color = "gray50"),
    axis.title = element_blank()) +
    labs(axis = NULL, y = NULL, x = NULL, title  = NULL,  fill = NULL, caption = NULL)
```

```{r}
plot_ly(
  type='treemap',
  Casos.confirmados= Sonora.DF.hoy$Casos.confirmados,
  values= Sonora.DF.hoy$Estatus,
  domain=list(column=0))

 )
```

```{r, include=FALSE}
library(readr)
Casos <- read_csv("Casosdiarios.csv", 
    col_types = cols(CASOS = col_integer(), 
        CVEGEO = col_character(), Fecha = col_date(format = "%d/%m/%Y"), 
        MUNICIPIO = col_character(), NUEVOS = col_integer()), 
    locale = locale(encoding = "ISO-8859-1"))
casosacumdia <- filter(Casos,Fecha==Sys.Date())
casosacumdiaorder <- arrange(casosacumdia,CASOS, desc(MUNICIPIO))
casosacumdia2 <- mutate(casosacumdiaorder,id=CVEGEO)
casosmov <- filter(casosacumdia2,NUEVOS!=0)
```


```{r, include=FALSE}
Decesos <- read_csv("Decesosdiarios.csv", 
     col_types = cols(DECESOS = col_integer(), 
        CVEGEO = col_character(), Fecha = col_date(format = "%d/%m/%Y"), 
        MUNICIPIO = col_character(), NUEVOS = col_integer()), 
    locale = locale(encoding = "ISO-8859-1"))
decesosacumdia <- filter(Decesos,Fecha==Sys.Date())
decesosacumdiaorder <- arrange(decesosacumdia,DECESOS, desc(MUNICIPIO))
decesosacumdia2 <- mutate(decesosacumdiaorder,id=CVEGEO)
decesosacumdia3 <- rename(decesosacumdia2, NUEVOSD=NUEVOS)
decesosmov <- filter(decesosacumdia3,NUEVOSD!=0)
movtbl<-full_join(casosmov,decesosacumdia3)
movtbl<-full_join(movtbl,decesosmov)
write.csv(movtbl,'movtlb.csv')
```

```{r, include=FALSE}
casos_s <- group_by(Casos, CVEGEO, MUNICIPIO)
casos_ult <- casos_s %>% filter(NUEVOS!=0) %>% arrange(desc(Fecha)) %>% slice(1)
casos_ult_dias <- mutate(casos_ult, Dias_ult=as.numeric(Sys.Date()-Fecha)) 
casos_ult_dias <- mutate(casos_ult_dias, clasfdias=if_else(Dias_ult>14,4,(if_else(Dias_ult>7,3,if_else(Dias_ult>0,2,1)))))
casos_ult_dias <- mutate(casos_ult_dias, clasfdias=as.numeric(clasfdias))
casos_ult_dias <- mutate(casos_ult_dias,id=CVEGEO)
```


Column
-----------------------------------------------------------------------
### Mapa de casos diarios {data-width=500}


```{r include=FALSE}
capa_munison <- readOGR("Shapes", layer="MUNSON")
capa_son <- readOGR("Shapes", layer="ENTSON")
```

```{r, include=FALSE}
capa_munison_df <- fortify(capa_munison, region="CVEGEO")
capa_munison_casos<- inner_join(capa_munison_df, casosacumdia2, by="id")
capa_munison_casos <- mutate(capa_munison_casos, movimiento=if_else(NUEVOS>0,1,0))
```

```{r, include=FALSE}

discrete <- c("0" = "#58bcbc", "1" = "#01787e")

Mapa_mov <- ggplot(capa_munison_casos, aes(map_id = id)) +
               geom_polygon(data=capa_son, aes(x=long, y=lat, group=group), 
               fill="transparent", color="black", size=1.5) +
        geom_polygon(data=capa_munison, aes(x=long, y=lat, group=group), 
               fill="gray90", color="white", size=0.3) +
     geom_map_interactive(aes(fill = factor(movimiento), tooltip=capa_munison_casos$tooltip,data_id=id),color = "white",size=0.5, map = capa_munison_df) + 
    scale_fill_manual(values = discrete, breaks= c("0", "1"))+
    theme_void() +
   theme(plot.title = (element_text(family = "Lato Black", size = 15, color = "#01A2AC")), rect = element_rect(fill = "transparent"),
    legend.position = "none",
     plot.background = element_rect(fill = "transparent", color = NA),
    legend.key.height = unit (2, "cm"), axis.text = element_blank(),
    legend.text = element_text(family = "Lato Light", size = 6, color = "black"),
    legend.title = element_blank(),
    plot.caption = element_text(family = "Lato Light", size = 8, color = "gray50"),
    axis.title = element_blank()) +
    labs(axis = NULL, y = NULL, x = NULL, title  = NULL,  fill = NULL, caption = NULL)
ggsave("movimientos.png",Mapa_mov, bg = "transparent", height = 25.9, width = 25.9, units = "cm")

```

```{r, include=FALSE}
tooltip_css <- "background-color:#01787E; color:white;font-family: Lato, sans-serif;opacity: 0.25; padding:5px"
Casos_map_ani <- girafe(code = print(Mapa_casos),
  options = list(opts_tooltip(css = tooltip_css)) )
```

```{r}
Casos_map_ani 
```

Column
-----------------------------------------------------------------------
### Casos acumulados al 04 de julio de 2020 {data-width=500}

```{r, include=FALSE}
CasosCol <- ggplot(casosacumdiaorder) +
    geom_col(aes(x = fct_inorder(MUNICIPIO), y = `CASOS`, fill = `CASOS`), color = "white") + 
  geom_text(aes(x = fct_inorder(MUNICIPIO), y = `CASOS`, label=`CASOS`, family="Lato"), size=2, vjust=0.4, hjust=-0.4) +
geom_vline(xintercept=seq(1.5,length(unique(casosacumdiaorder$MUNICIPIO))-0.5, 1),lwd=0.2, colour="gray95") + 
  coord_flip(clip = "off") + 
   scale_fill_gradient(low = "#58BCBC", high = "black", limits = c(1,3400), breaks = c(1, 500, 1000, 1500, 2000, 2500, 3000)) +
       theme_minimal() +
    theme(
    legend.position = "none",
    axis.text.y = element_text(family = "Lato", size = 5, color = "black"),
    axis.text.x = element_blank(),axis.line.y = element_line(colour = "black"),
    panel.background = element_blank(),
    panel.grid.major.y = element_blank(), 
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    axis.title = element_text(family = "Lato", size = 8),
    plot.margin=unit(c(0,2,0,0),"cm")) + 
    labs(y = NULL, x = NULL) 

```

```{r}
CasosCol
```

Último caso confirmado
===================================== 

Column
-----------------------------------------------------------------------
### Mapa de días transcurridos respecto al último caso confirmado {data-width=500}

```{r, include=FALSE}
capa_ult_dias<- inner_join(capa_munison_df, casos_ult_dias, by="id")
```

```{r, include=FALSE}
capa_ult_dias$tooltip <- c(paste0("<b>",capa_ult_dias$MUNICIPIO, "</b>", "<b>","\n Último caso ", "</b>", capa_ult_dias$Fecha,"</b>", "<b>","\n Días ", "</b>", capa_ult_dias$Dias_ult))

discreta <- c("1" = "#56002B", "2" = "#F79646","3" = "#FFCC66","4" = "#01787E")

Mapa_ult <- ggplot(capa_ult_dias, aes(map_id = id)) +
               geom_polygon(data=capa_son, aes(x=long, y=lat, group=group), 
               fill="transparent", color="black", size=1) +
    geom_polygon(data=capa_munison, aes(x=long, y=lat, group=group), 
               fill="gray90", color="white", size=0.3) +
     geom_map_interactive(aes(fill = factor(clasfdias), tooltip=capa_ult_dias$tooltip,data_id=id),color = "white",size=0.3, map = capa_munison_df) + 
    scale_fill_manual("Días desde que se \n confirmó el último caso", values = discreta, breaks= c("4", "3", "2", "1"), labels = c( "+14", "8-14","1-7", "0"))+
    theme_void() +
   theme(plot.title = (element_text(family = "Lato Black", size = 15, color = "#01A2AC")),
    legend.position = "left", axis.text = element_blank(), legend.key.height = unit (2, "cm"),
    legend.text = element_text(family = "Lato Light", size = 6, color = "black"),
    legend.title = element_text(family = "Lato Black", size = 5, color = "black"),
    plot.caption = element_text(family = "Lato Light", size = 8, color = "gray50"),
    axis.title = element_blank()) +
    labs(axis = NULL, y = NULL, x = NULL, title  = NULL,  fill = NULL, caption ="Elaboración Luis Armando Moreno con información de la Secretaría de Salud del Estado de Sonora", fill = "Días desde que se confirmó el último caso")
 

```

```{r, include=FALSE}
tooltip_css <- "background-color:#BFBFBF; color:black;font-family: Lato, sans-serif;opacity: 0.25; padding:5px"
hover_css <- "stroke:black;stroke-width:1.5pt;"
Casos_ult_ani <- girafe(code = {print(Mapa_ult)}, 
  options = list(opts_tooltip(css = tooltip_css), opts_hover(hover_css)) )
```

```{r}
Casos_ult_ani 
```


Column
-----------------------------------------------------------------------
### Días desde el último caso confirmado  {data-width=500}

```{r, include=FALSE}
casos_ult_dias_order <- arrange(casos_ult_dias,Dias_ult, desc(MUNICIPIO))

Casos_ultCol <- ggplot(casos_ult_dias_order) +
    geom_col(aes(x = fct_inorder(MUNICIPIO), y = Dias_ult, fill = factor(clasfdias)), color = "white") + 
  geom_text(aes(x = fct_inorder(MUNICIPIO), y = Dias_ult, label=Dias_ult, family="Lato"), size=2, vjust=0.4, hjust=-0.4) +
  geom_vline(xintercept=seq(1.5,length(unique(casosacumdiaorder$MUNICIPIO))-0.5, 1),lwd=0.2, colour="gray95") + 
  coord_flip(clip = "off") + 
   scale_fill_manual(values = discreta)+
       theme_minimal() +
    theme(
    legend.position = "none",
    axis.text.y = element_text(family = "Lato", size = 5, color = "black"),
    axis.text.x = element_blank(),axis.line.y = element_line(colour = "black"),
    panel.background = element_blank(),
    panel.grid.major.y = element_blank(), 
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    axis.title = element_text(family = "Lato", size = 8),
    plot.margin=unit(c(0,2,0,0),"cm")) + 
    labs(y = NULL, x = NULL) 

```

```{r}
Casos_ultCol
```

Decesos acumulados
===================================== 

Column
-----------------------------------------------------------------------
### Mapa de decesos acumulados {data-width=500}


```{r, include=FALSE}
capa_munison_decesos<- inner_join(capa_munison_df, decesosacumdia2, by="id")
```

```{r, include=FALSE}
capa_munison_decesos$tooltip <- c(paste0("<b>",capa_munison_decesos$MUNICIPIO, "</b>", "<b>","\n Decesos ", "</b>", capa_munison_decesos$DECESOS,"</b>", "<b>","\n Nuevos ", "</b>", capa_munison_decesos$NUEVOS))

Mapa_decesos <- ggplot(capa_munison_decesos, aes(map_id = id)) +
               geom_polygon(data=capa_son, aes(x=long, y=lat, group=group), 
               fill="transparent", color="black", size= 1) +
        geom_polygon(data=capa_munison, aes(x=long, y=lat, group=group), 
               fill="gray90", color="white", size=0.3) +
     geom_map_interactive(aes(fill = DECESOS, tooltip=capa_munison_decesos$tooltip, data_id=id),color = "white",size=0.3, map = capa_munison_df) + 
    scale_fill_gradient(low= "#993366", high = "black", limits = c(1,300), breaks = c(1, 50, 100, 150, 200, 250,300))+
    theme_void() +
   theme(plot.title = (element_text(family = "Lato Black", size = 15, color = "#01A2AC")),
    legend.position = "left",
    legend.key.height = unit (2, "cm"), axis.text = element_blank(),
    legend.text = element_text(family = "Lato Light", size = 6, color = "black"),
    legend.title = element_blank(),
    plot.caption = element_text(family = "Lato Light", size = 8, color = "gray50"),
    axis.title = element_blank()) +
    labs(axis = NULL, y = NULL, x = NULL, title  = NULL,  fill = NULL, caption ="Elaboración Luis Armando Moreno con información de la Secretaría de Salud del Estado de Sonora")
 

```

```{r, include=FALSE}
tooltip_css <- "background-color:#73264D; color:white;font-family: Lato, sans-serif;opacity: 0.25; padding:5px"
Decesos_map_ani <- girafe(code = print(Mapa_decesos),
  options = list(opts_tooltip(css = tooltip_css)) )
```

```{r}
Decesos_map_ani 
```

Column
-----------------------------------------------------------------------
### Decesos acumulados al 03 de julio de 2020 {data-width=500}

```{r, include=FALSE}

DecesosCol <- ggplot(decesosacumdiaorder) +
    geom_col(aes(x = fct_inorder(MUNICIPIO), y = `DECESOS`, fill = LETALIDAD), color = "white") + 
  geom_text(aes(x = fct_inorder(MUNICIPIO), y = `DECESOS`, label=DECESOS, family="Lato"), size=2, vjust=0.4, hjust=-0.4) +
geom_vline(xintercept=seq(1.5,length(unique(decesosacumdiaorder$MUNICIPIO))-0.5, 1),lwd=0.2, colour="gray95") + 
  coord_flip(clip = "off") + 
   scale_fill_gradient(low= "#993366", high = "black", limits = c(1,300), breaks = c(1, 50, 100, 150, 200, 250,300)) +
       theme_minimal() +
    theme(
    legend.position = "none",
    axis.text.y = element_text(family = "Lato Light", size = 8, color = "black"),
    axis.text.x = element_blank(), axis.line.y = element_line(colour = "black"),
    panel.background = element_blank(),
    panel.grid.major.y = element_blank(), 
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    axis.title = element_text(family = "Lato", size = 8),
    plot.margin=unit(c(0,2,0,0),"cm")) + 
    labs(y = NULL, x = NULL) 

```

```{r}
DecesosCol
```

Evolución diaria
===================================== 

Column {.tabset}
-----------------------------------------------------------------------
### Casos diarios

```{r, include=FALSE}
Casos$NUEVOS[Casos$NUEVOS == 0] <- NA
Casos_Todos <- ggplot(data = Casos) +
      geom_tile(mapping = aes(x = Fecha, y = MUNICIPIO, fill = NUEVOS, text = paste(
               "ACUMULADOS: ", CASOS, "\n")), color = "white") +
        scale_fill_gradient(low = "#58BCBC", high = "black", limits = c(1,180), breaks = c(1, 20, 40, 60, 80, 100, 120, 140, 160, 180)) +
    scale_x_date(date_breaks = "weeks" , date_labels = "%d-%m") +
     theme_minimal() +
    theme(plot.title = (element_text(family = "Lato Black", size = 15, color = "#01A2AC")),
    legend.key.height = unit (2, "cm"),    axis.text.y = element_text(family = "Lato Light", size = 9, color = "black"), 
    axis.text.x = element_text(family = "Lato Light", size = 8, color = "black"),
    legend.text = element_text(family = "Lato", size = 8, color = "black"),
    panel.background = element_rect(fill="gray99") ,
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank(),
    legend.title = element_text(family = "Lato", size = 8, color = "black"),
    plot.caption = element_text(family = "Lato Light", size = 8, color = "gray50", face = "italic"),
    axis.title = element_text(family = "Lato", size = 8)) +
    labs(y = NULL, x = NULL, title  = NULL,  fill = NULL, caption ="Elaboración propia con información de la Secretaría de Salud del Estado de Sonora")
Casos_anim <- ggplotly(Casos_Todos)
```

```{r }
Casos_anim
```

### Decesos diarios

```{r, include=FALSE}
Decesos$NUEVOS[Decesos$NUEVOS == 0] <- NA
Decesos_Todos <- ggplot(data = Decesos) +
      geom_tile(mapping = aes(x = Fecha, y = MUNICIPIO, fill = NUEVOS, text = paste(
               "ACUMULADOS: ", DECESOS, "\n")), color = "white") +
     scale_fill_gradient(low= "#993366", high = "black", limits = c(0,30), breaks = c(0, 5, 10, 15, 20, 25,30) ) +
     scale_x_date(date_breaks = "weeks" , date_labels = "%d-%m")+
     theme_minimal() +
    theme(plot.title = (element_text(family = "Lato Black", size = 15, color = "#993366", vjust = -0.1, face = "bold")),
    legend.key.height = unit (2, "cm"), 
     axis.text.y = element_text(family = "Lato Light", size = 10, color = "black"), 
    axis.text.x = element_text(family = "Lato Light", size = 10, color = "black"),
    legend.text = element_text(family = "Lato", size = 8, color = "black"),
    panel.background = element_rect(fill="gray99") ,
    panel.grid.major.y = element_line(colour = "white"), 
    panel.grid.minor.y = element_line(colour = "white"),
    legend.title = element_text(family = "Lato", size = 8, color = "black"),
    plot.caption = element_text(family = "Lato Light", size = 8, color = "gray50", face = "italic"),
    axis.title = element_text(family = "Lato", size = 8)) +
    labs(y = NULL, x = NULL, title  = NULL,  fill = NULL, caption ="Elaboración propia con información de la Secretaría de Salud del Estado de Sonora")
Decesos_anim <- ggplotly(Decesos_Todos)
```


```{r}
Decesos_anim
```

Indicadores
=====================================
**Al 4 de julio de 2020**  [Descarga esta tabla](https://onedrive.live.com/download.aspx?resid=5ADDF6870413EAC9!32159&authkey=!AC27R9r4fs_DWP4)
```{r}
POBMUN <- read_csv("POBMUN.csv", col_types = cols(CVEGEO = col_character()))
casos_pal <- function(x) rgb(colorRamp(c("#EAF6F6", "#7FCDCB"))(x), maxColorValue = 255)
decesos_pal <- function(x) rgb(colorRamp(c("#FBF3F7", "#E0A3C1"))(x), maxColorValue = 255)

decesosacumdia3 <- rename(decesosacumdia,'DECESOS NUEVOS'=NUEVOS)
casosacumdia3 <- rename(casosacumdia,'CASOS NUEVOS'=NUEVOS)
casosdecesos <-left_join(casosacumdia3, decesosacumdia3,by = c("CVEGEO","Fecha","MUNICIPIO"))
casosdecesospob <- left_join(casosdecesos, POBMUN, by = "CVEGEO")
Indicadores <- casosdecesospob %>% mutate (INCIDENCIA = (CASOS*100000)/POB, MORTALIDAD = (DECESOS*100000)/POB, LETALIDAD = DECESOS*100/CASOS)
Indicadores <- rename(Indicadores, POBLACION=POB)
CDSELECT<-select(Indicadores, "MUNICIPIO","POBLACION", "CASOS","CASOS NUEVOS","INCIDENCIA", "DECESOS","DECESOS NUEVOS","MORTALIDAD", "LETALIDAD")
CDSELECT1 <- CDSELECT %>% mutate(DECESOS = coalesce(DECESOS,0L),`DECESOS NUEVOS` = coalesce(`DECESOS NUEVOS`,0L), `CASOS NUEVOS` = coalesce(`CASOS NUEVOS`,0L), MORTALIDAD = coalesce(MORTALIDAD, 0), LETALIDAD = coalesce(LETALIDAD, 0))
reactable(CDSELECT1,searchable = TRUE, highlight = TRUE, defaultSorted = "CASOS", defaultSortOrder = "desc",
  defaultPageSize = 15, minRows = 15, borderless = FALSE, striped = FALSE,
    language = reactableLang(
    searchPlaceholder = "Búsqueda...",
    noData = "No encontrado",
    pageInfo = "{rowStart} a {rowEnd} de {rows} entradas",
    pagePrevious = "Previa",
    pageNext = "Siguiente"), 
    theme = reactableTheme(
      headerStyle = list(
        "&:hover[aria-sort]" = list(background = "hsl(0, 0%, 96%)"),
        "&[aria-sort='ascending'], &[aria-sort='descending']" = list(background = "hsl(0, 0%, 96%)"),
        borderColor = "#555"
      )
    ),
   columns = list(
    MUNICIPIO = colDef(footer = "Total Estatal"),
     POBLACION = colDef(format = colFormat(separators = TRUE),
      footer = JS("function(colInfo) {
        var values = colInfo.data.map(function(row) { return row[colInfo.column.id] })
        var total = values.reduce(function(a, b) { return a + b }, 0)
        return total.toFixed(0)
      }"), 
    ), CASOS = colDef(
      footer = JS("function(colInfo) {
        var values = colInfo.data.map(function(row) { return row[colInfo.column.id] })
        var total = values.reduce(function(a, b) { return a + b }, 0)
        return total.toFixed(0)
      }"), 
    ), DECESOS = colDef(
      footer = JS("function(colInfo) {
        var values = colInfo.data.map(function(row) { return row[colInfo.column.id] })
        var total = values.reduce(function(a, b) { return a + b }, 0)
        return total.toFixed(0)
      }"), 
    ), 'CASOS NUEVOS' = colDef(
      footer = JS("function(colInfo) {
        var values = colInfo.data.map(function(row) { return row[colInfo.column.id] })
        var total = values.reduce(function(a, b) { return a + b }, 0)
        return total.toFixed(0)
      }"), 
    ), 'DECESOS NUEVOS' = colDef(
      footer = JS("function(colInfo) {
        var values = colInfo.data.map(function(row) { return row[colInfo.column.id] })
        var total = values.reduce(function(a, b) { return a + b }, 0)
        return total.toFixed(0)
      }"), 
    ), INCIDENCIA = colDef(format = colFormat(digits = 1),  footer = "Casos por 100 mil habs.", style = function(value) {
        normalized <- (value - min(CDSELECT1$INCIDENCIA)) / (max(CDSELECT1$INCIDENCIA) - min(CDSELECT1$INCIDENCIA))
        color <- casos_pal(normalized)
        list(background = color)
      }), 
    MORTALIDAD = colDef(format = colFormat(digits = 1), footer = "Decesos por 100 mil habs.", style = function(value) {
        normalized2 <- (value - min(CDSELECT1$MORTALIDAD)) / (max(CDSELECT1$MORTALIDAD) - min(CDSELECT1$MORTALIDAD))
        color <- decesos_pal(normalized2)
        list(background = color)
      }), 
    LETALIDAD = colDef(format = colFormat(digits = 1), footer = "Decesos por cada 100 casos", style = function(value) {
        normalized3 <- (value - min(CDSELECT1$LETALIDAD)) / (max(CDSELECT1$LETALIDAD) - min(CDSELECT1$LETALIDAD))
        color <- decesos_pal(normalized3)
        list(background = color)
      })),
  defaultColDef = colDef(footerStyle = list(fontWeight = "bold")))
```
```{r, include=FALSE}
write.csv(CDSELECT1,'Indicadores-Municipios-Sonora.csv')
```

```{r}
Casossemana <- Casos %>% mutate(Semana = isoweek(Fecha)) %>% group_by(Semana) %>% mutate (Reporte=max(as.Date(Fecha))) %>% ungroup()
Casossem <- group_by(Casossemana, MUNICIPIO, Reporte) %>% summarise('CASOS SEMANALES' = sum(NUEVOS), ACUMULADOS=max(CASOS))
Casos_Semanales <- ggplot(subset(Casossem, MUNICIPIO %in% c("Hermosillo", "Cajeme", "Nogales", "San Luis Río Colorado", "Navojoa", "Guaymas", "Caborca", "Agua Prieta", "Huatabampo", "Puerto Peñasco", "Etchojoa", "Empalme"))) +
    geom_col(mapping = aes(x = Domingo, y = `CASOS SEMANALES`, fill = `CASOS SEMANALES`, label= ACUMULADOS)) +
    scale_fill_gradient(low = "#58BCBC", high = "black") + 
    facet_wrap(~ MUNICIPIO, scales = "free_y") + 
    theme(axis.line = element_line(linetype = "solid"),
          plot.title = (element_text(family = "Lato Black", size = 30)),
          strip.text = element_text(family = "Lato Black", size = 20),
          axis.text = element_text(family = "Lato", size =10),
          panel.grid.major = element_line(colour = "white"), 
          panel.grid.minor = element_line(colour = "white"), 
          axis.title = element_text(family = "Lato", size = 15),
          panel.background = element_rect(fill = "gray95", size = 1), 
          legend.position = "none") +labs(y = NULL, x = NULL, title  = NULL) + 
  theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"),                                   panel.background = element_rect(fill = "gray95"),legend.position = "none")
ggplotly(Casos_Semanales, tooltip = c("y","x", "label"))
```


```{r}
Decesossemana <- Decesos %>% mutate(Semana = isoweek(Fecha)) %>% group_by(Semana) %>% mutate (Reporte=max(as.Date(Fecha))) %>% ungroup()
Decesossem <- group_by(Decesossemana, MUNICIPIO, Domingo) %>% summarise('DECESOS SEMANALES' = sum(NUEVOS), ACUMULADOS=max(DECESOS))
Decesos_Semanales <- ggplot(subset(Decesossem, MUNICIPIO %in% c("Hermosillo", "Cajeme", "Nogales", "San Luis Río Colorado", "Navojoa", "Guaymas", "Caborca", "Agua Prieta", "Huatabampo", "Puerto Peñasco", "Etchojoa", "Empalme"))) +
    geom_col(mapping = aes(x = Reporte, y = `DECESOS SEMANALES`, fill = `DECESOS SEMANALES`, label= ACUMULADOS)) +
    scale_fill_gradient(low = "#993366", high = "black") +
    facet_wrap(~ MUNICIPIO, scales = "free_y") + 
    theme(axis.line = element_line(linetype = "solid"),
          plot.title = (element_text(family = "Lato Black", size = 30)),
          strip.text = element_text(family = "Lato Black", size = 20),
          axis.text = element_text(family = "Lato", size =10),
          panel.grid.major = element_line(colour = "white"), 
          panel.grid.minor = element_line(colour = "white"), 
          axis.title = element_text(family = "Lato", size = 15),
          panel.background = element_rect(fill = "gray95", size = 1), 
          legend.position = "none") +labs(y = NULL, x = NULL, title  = NULL) + 
  theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"),                                   panel.background = element_rect(fill = "gray95"),legend.position = "none")
ggplotly(Decesos_Semanales, tooltip = c("y", "label", "x"))
```




### Incidencia
```{r}
Incidencia = IncidenciaSonora()
valueBox(Incidencia, color = "#9BD7D7")
```

### Letalidad
```{r}
Letalidad = IncidenciaSonora()
valueBox(Incidencia, color = "#E0A3C1")
```

### % Gravedad
```{r}
Gravedad = GravedadSonora()
valueBox(Gravedad, color = "#FABF8F")
```

### % Recuperación
```{r}
Recup100 = Recup100Sonora()
valueBox(Recup100, color = "#95B3D7")
```


Evolución
===================================== 

Row {.tabset}
-----------------------------------------------------------------------
### **Casos semanales**
```{r}
Casossemana <- Casos %>% mutate(Semana = isoweek(Fecha)) %>% group_by(Semana) %>% mutate (Reporte=max(as.Date(Fecha))) %>% ungroup()
Casossem <- group_by(Casossemana, MUNICIPIO, Reporte, Semana) %>% summarise('CASOS SEMANALES' = sum(NUEVOS), ACUMULADOS=max(CASOS)) 
Casos_Semanales <- ggplot(subset(Casossem, MUNICIPIO %in% c("Hermosillo", "Cajeme", "Nogales", "San Luis Río Colorado", "Navojoa", "Guaymas", "Caborca", "Agua Prieta", "Huatabampo", "Puerto Peñasco", "Etchojoa", "Empalme"))) +
    geom_col(mapping = aes(x = Reporte, y = `CASOS SEMANALES`, fill = `CASOS SEMANALES`, label= ACUMULADOS)) +
    scale_fill_gradient(low = "#58BCBC", high = "black") + 
    facet_wrap(~ MUNICIPIO, scales = "free_y") + 
    theme(axis.line = element_line(linetype = "solid"), plot.margin = margin(1, 3, 1, 3, "cm"),
          plot.title = (element_text(family = "Lato Black", size = 30)),
          strip.text = element_text(family = "Lato Black", size = 16),
          axis.text = element_text(family = "Lato", size =10),
          panel.grid.major = element_line(colour = "white"), 
          panel.grid.minor = element_line(colour = "white"), 
          axis.title = element_text(family = "Lato", size = 15),
          panel.background = element_rect(fill = "gray95"), 
          legend.position = "none") +labs(y = NULL, x = NULL, title  = NULL) + 
  theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"),                                   panel.background = element_rect(fill = "gray95"),legend.position = "none",  panel.margin.y = unit(0, "lines"), panel.margin.x = unit(0,"lines"))
ggplotly(Casos_Semanales, tooltip = c("y","label", "x"))
```

### **Decesos semanales**
```{r}
Decesossemana <- Decesos %>% mutate(Semana = isoweek(Fecha)) %>% group_by(Semana) %>% mutate (Reporte=max(as.Date(Fecha))) %>% ungroup()
Decesossem <- group_by(Decesossemana, MUNICIPIO, Reporte, Semana) %>% summarise('DECESOS SEMANALES' = sum(NUEVOS), ACUMULADOS=max(DECESOS)) 
Decesos_Semanales <- ggplot(subset(Decesossem, MUNICIPIO %in% c("Hermosillo", "Cajeme", "Nogales", "San Luis Río Colorado", "Navojoa", "Guaymas", "Caborca", "Agua Prieta", "Huatabampo", "Puerto Peñasco", "Etchojoa", "Empalme"))) +
    geom_col(mapping = aes(x = Reporte, y = `DECESOS SEMANALES`, fill = `DECESOS SEMANALES`, label= ACUMULADOS)) +
    scale_fill_gradient(low = "#993366", high = "black") +
    facet_wrap(~ MUNICIPIO, scales = "free_y") + 
    theme(axis.line = element_line(linetype = "solid"), plot.margin = margin(1, 3, 1, 3, "cm"), 
          plot.title = (element_text(family = "Lato Black", size = 30)),
          strip.text = element_text(family = "Lato Black", size = 16),
          axis.text = element_text(family = "Lato", size =10),
          panel.grid.major = element_line(colour = "white"), 
          panel.grid.minor = element_line(colour = "white"), 
          axis.title = element_text(family = "Lato", size = 15),
          panel.background = element_rect(fill = "gray95"), 
          legend.position = "none") +labs(y = NULL, x = NULL, title  = NULL) + 
  theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"),                                   panel.background = element_rect(fill = "gray95"),legend.position = "none",  panel.margin.y = unit(0, "lines"), panel.margin.x = unit(0,"lines"))
ggplotly(Decesos_Semanales, tooltip = c("y", "label", "x"))
```

### **Casos semanales**
```{r}
Casossemana <- Casos %>% mutate(Semana = isoweek(Fecha)) %>% group_by(Semana) %>% mutate (Reporte=max(as.Date(Fecha))) %>% ungroup()
Casossem <- group_by(Casossemana, Reporte, Semana) %>% summarise('CASOS SEMANALES' = sum(NUEVOS), ACUMULADOS=max(CASOS)) 
Casos_Semanales <- ggplot(Casossem) +
    geom_col(mapping = aes(x = Reporte, y = `CASOS SEMANALES`, fill = `CASOS SEMANALES`, label= ACUMULADOS)) +
    scale_fill_gradient(low = "#58BCBC", high = "black") + 
    theme(axis.line = element_line(linetype = "solid"), plot.margin = margin(1, 3, 1, 3, "cm"),
          plot.title = (element_text(family = "Lato Black", size = 30)),
          strip.text = element_text(family = "Lato Black", size = 16),
          axis.text = element_text(family = "Lato", size =10),
          panel.grid.major = element_line(colour = "white"), 
          panel.grid.minor = element_line(colour = "white"), 
          axis.title = element_text(family = "Lato", size = 15),
          panel.background = element_rect(fill = "gray95"), 
          legend.position = "none") +labs(y = NULL, x = NULL, title  = NULL) + 
  theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"),                                   panel.background = element_rect(fill = "gray95"),legend.position = "none",  panel.margin.y = unit(0, "lines"), panel.margin.x = unit(0,"lines"))
ggplotly(Casos_Semanales, tooltip = c("y","label", "x"))
```


```{r}
Nacional <- read_csv("Nacional.csv", col_types = cols(Fecha = col_date(format = "%d/%m/%Y")))
Nacionalsemana <- Nacional %>% mutate(Semana = isoweek(Fecha)) %>% group_by(Semana) %>% mutate (Reporte=max(as.Date(Fecha))) %>% ungroup()
Nacionalsem <- group_by(Nacionalsemana, Reporte, Semana) %>% summarise('CASOS SEMANALES' = sum(Casos.Nuevos), ACUMULADOS=max(Casos), 'DECESOS SEMANALES' = sum(Decesos.Nuevos), DECESOS.ACUMULADOS=max(Decesos)) 
Nacional_Semanales <- ggplot(Nacionalsem) +
    geom_col(mapping = aes(x = Reporte, y = `CASOS SEMANALES`, fill = `CASOS SEMANALES`, label= ACUMULADOS)) +
    scale_fill_gradient(low = "#58BCBC", high = "black") + 
    theme(axis.line = element_line(linetype = "solid"), plot.margin = margin(1, 3, 1, 3, "cm"),
          plot.title = (element_text(family = "Lato Black", size = 30)),
          strip.text = element_text(family = "Lato Black", size = 16),
          axis.text = element_text(family = "Lato", size =10),
          panel.grid.major = element_line(colour = "white"), 
          panel.grid.minor = element_line(colour = "white"), 
          axis.title = element_text(family = "Lato", size = 15),
          panel.background = element_rect(fill = "gray95"), 
          legend.position = "none") +labs(y = NULL, x = NULL, title  = NULL) + 
  theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"),                                   panel.background = element_rect(fill = "gray95"),legend.position = "none",  panel.margin.y = unit(0, "lines"), panel.margin.x = unit(0,"lines"))
ggplotly(Nacional_Semanales, tooltip = c("y","label", "x"))
```

```{r}
Nacionalsem <- group_by(Nacionalsemana, Reporte, Semana) %>% summarise('CASOS SEMANALES' = sum(Casos.Nuevos), ACUMULADOS=max(Casos), 'DECESOS SEMANALES' = sum(Decesos.Nuevos), DECESOS.ACUMULADOS=max(Decesos)) 
Nacionalsem <- summarize(Nacionalsem, 'Letalidad' = 'DECESOS SEMANALES'*100/'CASOS SEMANALES')
Nacional_Semanales <- ggplot(Nacionalsem) +
    geom_col(mapping = aes(x = Reporte, y = `CASOS SEMANALES`, fill = `CASOS SEMANALES`, label= ACUMULADOS)) +
    scale_fill_gradient(low = "#58BCBC", high = "black") + 
    theme(axis.line = element_line(linetype = "solid"), plot.margin = margin(1, 3, 1, 3, "cm"),
          plot.title = (element_text(family = "Lato Black", size = 30)),
          strip.text = element_text(family = "Lato Black", size = 16),
          axis.text = element_text(family = "Lato", size =10),
          panel.grid.major = element_line(colour = "white"), 
          panel.grid.minor = element_line(colour = "white"), 
          axis.title = element_text(family = "Lato", size = 15),
          panel.background = element_rect(fill = "gray95"), 
          legend.position = "none") +labs(y = NULL, x = NULL, title  = NULL) + 
  theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"),                                   panel.background = element_rect(fill = "gray95"),legend.position = "none",  panel.margin.y = unit(0, "lines"), panel.margin.x = unit(0,"lines"))
ggplotly(Nacional_Semanales, tooltip = c("y","label", "x"))
```
```{r, include=FALSE}
Casosprom <- Casos %>% group_by(MUNICIPIO) %>% mutate(Casos.media.7d=round(rollmeanr(x=NUEVOS, 7, fill = 0),1)) 

Casosd <- ggplot(subset(Casosprom, MUNICIPIO %in% c("Hermosillo", "Cajeme", "Nogales", "San Luis Río Colorado", "Navojoa", "Caborca", "Guaymas"))) +
    geom_line(mapping = aes(x = CASOS, y = Casos.media.7d, color= MUNICIPIO, label= MUNICIPIO), size=1.5, alpha=0.6, arrow=arrow(type="open", length=unit(0.20,"cm"))) +
    scale_color_locuszoom() +
    theme(axis.line = element_line(linetype = "solid"), plot.margin = margin(1, 1, 0.5, 0.8, "cm"),
          plot.title = element_text(family = "Lato Black", size = 40,color = "#01A2AC"),  plot.subtitle = element_text(family = "Lato Light", size = 16, color = "black"), legend.title = element_blank(),
          strip.text = element_text(family = "Lato Black", size = 16),
          axis.text = element_text(family = "Lato", size =10),
          panel.grid.major = element_line(colour = "white", size= 1), 
          panel.grid.minor = element_line(colour = "white", size=0.2), plot.background = element_rect(fill = "white", color = "black", size = 5),
          axis.title.x = element_text(family = "Lato Light", size = 12, hjust=1),axis.title.y = element_text(family = "Lato Light", size = 12, hjust=1), plot.caption = element_text(family = "Lato", size = 10, color = "#01A2AC"),
          panel.background = element_rect(fill = "gray95"), legend.text = element_text(family = "Lato", size = 12),
          legend.position = "top", legend.justification="left") +labs(y = "Casos diarios\n(promedio móvil 7 días, log)", x = "Casos acumulados (log)",legend= NULL, title  = "Casos de Covid-19\nen los municipios de Sonora", subtitle= "Corte al 01 de agosto de 2020", caption ="\nFuente: Secretaría de Salud del Estado de Sonora\nwww.luisarmandomoreno.com") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10")

```



```{r}
ggplotly(Casosd, tooltip = c("y","label", "x"))  %>%
  layout(legend = list(orientation = "h",
                   y = 80, x = 0))
```






```{r}
Casosd
ggsave("casosdacum.png",Casosd, bg = "transparent", height = 25, width = 25, units = "cm")
```


```{r, include=FALSE}
Decesosprom <- Decesos %>% group_by(MUNICIPIO) %>% mutate(Decesos.media.7d=round(rollmeanr(x=NUEVOS, 7, fill = 0),1)) 

Decesosd <- ggplot(subset(Decesosprom, MUNICIPIO %in% c("Hermosillo", "Cajeme", "Nogales", "San Luis Río Colorado", "Navojoa", "Caborca", "Guaymas"))) +
    geom_line(mapping = aes(x = DECESOS, y = Decesos.media.7d, color= MUNICIPIO, label= MUNICIPIO), size=1.5, alpha=0.6, arrow=arrow(type="open", length=unit(0.20,"cm"))) +
    scale_color_locuszoom() +
    theme(axis.line = element_line(linetype = "solid"), plot.margin = margin(1, 1, 0.5, 0.8, "cm"),
          plot.title = element_text(family = "Lato Black", size = 40,color = "#993366"),  plot.subtitle = element_text(family = "Lato Light", size = 16, color = "black"), legend.title = element_blank(),
          strip.text = element_text(family = "Lato Black", size = 16),
          axis.text = element_text(family = "Lato", size =10),
          panel.grid.major = element_line(colour = "white", size= 1), 
          panel.grid.minor = element_line(colour = "white", size=0.2), plot.background = element_rect(fill = "white", color = "black", size = 5),
          axis.title.x = element_text(family = "Lato Light", size = 12, hjust=1),axis.title.y = element_text(family = "Lato Light", size = 12, hjust=1), plot.caption = element_text(family = "Lato", size = 10, color = "#993366"),
          panel.background = element_rect(fill = "gray95"), legend.text = element_text(family = "Lato", size = 12),
          legend.position = "top", legend.justification="left") +labs(y = "Decesos diarios\n(promedio móvil 7 días)", x = "Decesos acumulados",legend= NULL, title  = "Decesos de Covid-19\nen los municipios de Sonora", subtitle= "Corte al 01 de agosto de 2020", caption ="\nFuente: Secretaría de Salud del Estado de Sonora\nwww.luisarmandomoreno.com") + scale_y_continuous (expand = c(0, 0)) + scale_x_continuous (expand = c(0, 0))
                                                                                                                                                                                                                                                                                                                        
```

```{r}
Decesosd
ggsave("decesosdacum.png",Decesosd, bg = "transparent", height = 25, width = 25, units = "cm")
```


scale_color_manual(values=wes_palette(n=5, name="Moonrise3"))

Fuentes
===================================== 

Fuente: Reportes diarios de la Secretaría de Salud del Estado de Sonora y proyecciones de población para los municipios de Sonora a mediados de 2020 del Consejo Nacional de Población.

[CSV Casos confirmados municipales](https://onedrive.live.com/download.aspx?resid=5ADDF6870413EAC9!31283&authkey=!ALNt9KiLEoT72tU)

[CSV Decesos confirmados municipales](https://onedrive.live.com/download.aspx?resid=5ADDF6870413EAC9!31279&authkey=!AP0vbf3w6i0WUnI)

[CSV Población 2020 de los municipios de Sonora](https://onedrive.live.com/download.aspx?resid=5ADDF6870413EAC9!31865&authkey=!AB7AkXFCiIuN1_w)

Código del proyecto: [Covid19-Sonora-Municipios](https://github.com/dogomoreno/Covid19-Sonora-Municipios) 

[www.luisarmandomoreno.com](www.luisarmandomoreno.com)